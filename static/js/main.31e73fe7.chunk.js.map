{"version":3,"sources":["serviceWorker.ts","shared/styles/theme.ts","shared/styles/colors.ts","shared/styles/sizes.ts","shared/styles/font-sizes.ts","shared/styles/space.ts","shared/store/auth0/auth0.slice.ts","shared/store/user/user.slice.ts","shared/auth0/Auth0Provider.tsx","shared/components/NavLink.tsx","shared/store/self/self.selector.ts","shared/store/dashboard-ui/dashboard-ui.selector.ts","shared/store/dashboard-ui/dashboard-ui.slice.ts","Dashboard/DashboardSideNav.tsx","shared/store/user/user.selector.ts","Dashboard/DashboardHeader.tsx","shared/store/self/self.slice.ts","Dashboard/Dashboard.tsx","shared/components/PrimaryOutlineButton.tsx","shared/components/Input.tsx","shared/components/Modal.tsx","Dashboard/GoalsPage/WelcomeSubPage/CreateDreamModal/CreateDreamModal.tsx","shared/components/PageTitle.tsx","shared/components/FlexCard.tsx","shared/components/PageContainer.tsx","shared/components/Quote.tsx","shared/components/AdviserCard.tsx","shared/components/AdviserQuote.tsx","Dashboard/GoalsPage/WelcomeSubPage/WelcomeSubPage.tsx","shared/components/EntityCard.tsx","Dashboard/GoalsPage/GoalsSubPage/CreateResultGoalModal/CreateResultGoalModal.tsx","Dashboard/GoalsPage/GoalsSubPage/CreateProgressGoalModal/CreateProgressGoalModal.tsx","Dashboard/GoalsPage/GoalsSubPage/GoalsSubPage.tsx","Dashboard/GoalsPage/GoalsPage.tsx","Dashboard/PlansPage/PlansPage.tsx","Dashboard/WeeklySummaryPage/WeeklySummaryPage.tsx","Dashboard/GratitudePage/GratitudePage.tsx","Home/Home.tsx","shared/services/request.service.ts","shared/store/user/user.service.ts","Dashboard/ProfilePage/ImageCropModal/ImageCropModal.tsx","Dashboard/ProfilePage/ProfilePage.tsx","shared/styles/theme-colors.ts","Dashboard/SettingsPage/SettingsPage.tsx","Dashboard/DailyActionsPage/DailyActionsPage.tsx","shared/store/root.reducer.ts","shared/utils/local-storage.util.ts","shared/store/self/self.service.ts","shared/observables/constants.ts","shared/store/self/self.epic.ts","shared/store/user/user.epic.ts","shared/store/root.epic.ts","shared/store/root.store.ts","shared/services/store.service.ts","index.tsx","App.tsx"],"names":["Boolean","window","location","hostname","match","theme","ctheme","colors","white","text","sizes","px","full","xs","sm","md","lg","xl","fontSizes","space","console","log","auth0Slice","createSlice","name","initialState","idToken","reducers","setIdToken","state","action","payload","actions","auth0Reducer","reducer","auth0Name","profile","settings","themeColor","setProfile","setSettings","fetchUserInfoEpic","userReducer","userName","Auth0Context","createContext","Auth0Provider","children","useState","lock","setLock","dispatch","useDispatch","useTheme","useEffect","auth0Lock","Auth0Lock","AUTH0_CLIENT_ID","AUTH0_DOMAIN","hideMainScreenTitle","logo","primaryColor","auth","responseType","params","scope","on","authResult","Provider","value","NavLink","to","color","hoverColor","small","isHover","setHover","usedHoverColor","defaultStyles","transition","fontSize","getProps","isPartiallyCurrent","style","onMouseEnter","onMouseLeave","SelfSelector","dreamTitle","self","dream","title","dreamId","id","resultGoal","progressGoals","DashboardUiSelector","sideNavOpened","dashboardUi","isLoading","isSaving","dashboardUiSlice","toggleSideNav","setIsLoading","setIsSaving","dashboardUiReducer","dashboardUiName","DashboardSideNav","pathname","useSelector","hasSelf","_","width","onToggleSideNav","items","config","duration","from","transform","enter","leave","props","Box","display","position","height","minW","maxW","shadow","zIndex","bg","p","List","onClick","mt","Divider","my","UserSelector","user","DashboardHeader","pictureUrl","fullName","navigateTo","page","a","navigate","Flex","alignItems","justifyContent","h","as","MdClose","MdMenu","mr","cursor","Link","href","_hover","letterSpacing","Menu","Avatar","src","selfSlice","fetchSelfEpic","createSelfEpic","setSelf","setDream","setDreamTitle","updateDreamTitleEpic","createResultGoalEpic","setResultGoal","setResultGoalTitle","updateResultGoalTitleEpic","createProgressGoalEpic","setProgressGoals","setProgressGoalTitle","idx","updateProgressGoalTitleEpic","addProgressGoal","push","selfReducer","Dashboard","flexGrow","flexDirection","Spinner","right","bottom","size","PrimaryOutlineButton","Button","variant","Input","React","forwardRef","ref","focusBorderColor","errorBorderColor","Modal","isOpen","onClose","opacity","closeOnOverlayClick","CreateDreamModal","onSubmitForm","dreamValue","setDreamValue","minH","FormControl","FormLabel","htmlFor","onChange","event","target","FormHelperText","isDisabled","textAlign","Date","toDateString","PageTitle","subtitle","mb","Heading","fontWeight","Text","fontStyle","FlexCard","direction","PageContainer","Quote","quote","author","lineHeight","orientation","borderWidth","borderColor","PseudoBox","pt","pr","_before","content","AdviserCard","AdviserQuote","_after","ml","WelcomeSubPage","useDisclosure","isModalOpen","onOpenModal","onOpen","onCloseModal","SimpleGrid","columns","spacing","alignSelf","EntityCard","entityTite","CreateResultGoalModal","resultGoalValue","setResultGoalValue","CreateProgressGoalModal","progressGoalValue","setProgressGoalValue","Icon","GoalsSubPage","isCreateResultGoalModalOpen","onOpenCreateResultGoalModal","onCloseCreateResultGoalModal","isCreateProgressGoalModalOpen","onOpenProgressResultGoalModal","onCloseProgressResultGoalModal","onUpdateProgressGoalTitle","Textarea","resize","rows","IconButton","aria-label","icon","map","borderBottomWidth","length","borderRadius","resultGoalTitle","progressGoalTitle","resultGoalId","GoalsPage","PlansPage","WeeklySummaryPage","GratitudePage","Home","useContext","show","RequestService","store","subscribe","auth0","getState","bearerToken","axios","create","baseURL","API_SERVER_URL","headers","getHeaders","path","ajax","getJSON","getFullUrl","body","delete","pipe","response","post","put","Authorization","UserService","get","dto","formData","ImageCropModal","onSaveImage","imageBlob","setImageBlob","m","onCrop","imageWidth","ProfilePage","submitForm","values","updateProfile","firstName","lastName","updatedProfile","setSubmitting","initialValues","onSubmit","validate","errors","handleSubmit","isSubmitting","handleChange","handleBlur","isInvalid","onBlur","FormErrorMessage","email","type","fileName","imageFile","File","FormData","append","updateProfilePicture","themeColors","green","lightBlue","deepPurple","pink","indigo","lime","deepOrange","yellow","teal","getThemeColors","colorKey","SettingsPage","selectedColor","setSelectedColor","triangle","colorResult","hex","find","toLowerCase","updateSettings","DailyActionsPage","rootReducer","combineReducers","LocalStorageUtil","key","localStorage","setItem","getKeyWithPrefix","JSON","stringify","e","error","json","getItem","parse","prefix","SelfService","loadingDelay$","timer","selfEpic","action$","filter","switchMap","concat","of","getSelf","switchMapTo","debounceTime","distinctUntilChanged","updateDream","mapTo","createSelf","createResultGoal","updateResultGoal","createProgressGoal","progressGoal","updateProgressGoal","userEpic","getProfile","getSettings","tap","epicMiddleware","createEpicMiddleware","rootEpic","combineEpics","rootStore","configureStore","enhancers","middleware","getDefaultMiddleware","thunk","preloadedState","undefined","run","StoreService","storeKey","saveStateToLocalStorage","stateToSave","reduce","sliceName","set","init","ReactDOM","render","appTheme","ThemeProvider","CSSReset","primary","default","noThrow","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.31e73fe7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { theme as ctheme } from '@chakra-ui/core';\nimport { colors } from './colors';\nimport { sizes } from './sizes';\nimport { fontSizes } from './font-sizes';\nimport { space } from './space';\n\nexport const theme = {\n  ...ctheme,\n  colors: {\n    ...ctheme.colors,\n    ...colors\n  },\n  sizes: {\n    ...ctheme.sizes,\n    ...sizes\n  },\n  fontSizes: {\n    ...ctheme.fontSizes,\n    ...fontSizes\n  },\n  space: {\n    ...ctheme.space,\n    ...space\n  }\n};\n\nconsole.log(theme);\n","export const colors = {\n  white: 'white',\n  text: 'black',\n\n  'primary-50': '#E0F2F1',\n  'primary-100': '#B2DFDB',\n  'primary-200': '#80CBC4',\n  'primary-300': '#4DB6AC',\n  'primary-400': '#26A69A',\n  'primary-500': '#009688',\n  'primary-600': '#00897B',\n  'primary-700': '#00796B',\n  'primary-800': '#00695C',\n  'primary-900': '#004D40',\n  'primary-A100': '#A7FFEB',\n  'primary-A200': '#64FFDA',\n  'primary-A400': '#1DE9B6',\n  'primary-A700': '#00BFA5',\n\n  'warn-50': '#FFF3E0',\n  'warn-100': '#FFE0B2',\n  'warn-200': '#FFCC80',\n  'warn-300': '#FFB74D',\n  'warn-400': '#FFA726',\n  'warn-500': '#FF9800',\n  'warn-600': '#FB8C00',\n  'warn-700': '#F57C00',\n  'warn-800': '#EF6C00',\n  'warn-900': '#E65100',\n  'warn-A100': '#FFD180',\n  'warn-A200': '#FFAB40',\n  'warn-A400': '#FF9100',\n  'warn-A700': '#FF6D00',\n\n  'alert-50': '#FFEBEE',\n  'alert-100': '#FFCDD2',\n  'alert-200': '#EF9A9A',\n  'alert-300': '#E57373',\n  'alert-400': '#EF5350',\n  'alert-500': '#F44336',\n  'alert-600': '#E53935',\n  'alert-700': '#D32F2F',\n  'alert-800': '#C62828',\n  'alert-900': '#B71C1C',\n  'alert-A100': '#FF8A80',\n  'alert-A200': '#FF5252',\n  'alert-A400': '#FF1744',\n  'alert-A700': '#D50000',\n\n  'grey-50': '#FAFAFA',\n  'grey-100': '#F5F5F5',\n  'grey-200': '#EEEEEE',\n  'grey-300': '#E0E0E0',\n  'grey-400': '#BDBDBD',\n  'grey-500': '#9E9E9E',\n  'grey-600': '#757575',\n  'grey-700': '#616161',\n  'grey-800': '#424242',\n  'grey-900': '#212121',\n};\n\nexport type Colors = keyof typeof colors;\n\n// Generate colors from https://material.io/design/color/the-color-system.html#tools-for-picking-colors\n// const generateColors = (prefix: string, text: string) => {\n//   return text.split('\\n').reduce((res, item, idx) => {\n//     if (idx % 2 === 0) {\n//       return `${res}'${prefix}-${item}':`;\n//     }\n//     return `${res}'${item}',`;\n//   }, '');\n// };\n","export const sizes = {\n  '0': '0',\n  '1': '0.25rem',\n  '2': '0.5rem',\n  '3': '0.75rem',\n  '4': '1rem',\n  '5': '1.25rem',\n  '6': '1.5rem',\n  '8': '2rem',\n  '10': '2.5rem',\n  '12': '3rem',\n  '16': '4rem',\n  '20': '5rem',\n  '24': '6rem',\n  '32': '8rem',\n  '40': '10rem',\n  '48': '12rem',\n  '56': '14rem',\n  '64': '16rem',\n  px: '1px',\n  full: '100%',\n  '3xs': '14rem',\n  '2xs': '16rem',\n  xs: '20rem',\n  sm: '24rem',\n  md: '28rem',\n  lg: '32rem',\n  xl: '36rem',\n  '2xl': '42rem',\n  '3xl': '48rem',\n  '4xl': '56rem',\n  '5xl': '64rem',\n  '6xl': '72rem',\n  'containers-sm': '640px',\n  'containers-md': '768px',\n  'containers-lg': '1024px',\n  'containers-xl': '1280px'\n};\n\nexport type Size = keyof typeof sizes;\n","export const fontSizes = {\n  xs: '0.75rem',\n  sm: '0.875rem',\n  md: '1rem',\n  lg: '1.125rem',\n  xl: '1.25rem',\n  '2xl': '1.5rem',\n  '3xl': '1.875rem',\n  '4xl': '2.25rem',\n  '5xl': '3rem',\n  '6xl': '4rem'\n};\n\nexport type FontSizes = keyof typeof fontSizes;\n","export const space = {\n  '0': '0',\n  '1': '0.25rem',\n  '2': '0.5rem',\n  '3': '0.75rem',\n  '4': '1rem',\n  '5': '1.25rem',\n  '6': '1.5rem',\n  '8': '2rem',\n  '10': '2.5rem',\n  '12': '3rem',\n  '16': '4rem',\n  '20': '5rem',\n  '24': '6rem',\n  '32': '8rem',\n  '40': '10rem',\n  '48': '12rem',\n  '56': '14rem',\n  '64': '16rem',\n  px: '1px'\n};\n\nexport type Space = keyof typeof space;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface Auth0State {\n  // use to access api-server\n  idToken: string;\n}\n\nconst initialState: Auth0State = {\n  idToken: '',\n};\n\nconst auth0Slice = createSlice({\n  name: 'auth0',\n  initialState,\n  reducers: {\n    setIdToken(state, action: PayloadAction<string>) {\n      const { payload: idToken } = action;\n      state.idToken = idToken;\n    },\n  },\n});\n\nexport const { setIdToken } = auth0Slice.actions;\nexport const { reducer: auth0Reducer, name: auth0Name } = auth0Slice;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { UserProfileApi, UserSettingsApi } from '@selfplat/api-model';\n\nexport interface UserState {\n  profile: UserProfileApi;\n  settings: UserSettingsApi;\n}\n\nconst initialState: UserState = {\n  profile: null,\n  settings: {\n    themeColor: 'teal',\n  },\n};\n\nconst auth0Slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setProfile(state, action: PayloadAction<UserProfileApi>) {\n      const { payload: profile } = action;\n      state.profile = profile;\n    },\n    setSettings(state, action: PayloadAction<UserSettingsApi>) {\n      const { payload: settings } = action;\n      state.settings = settings;\n    },\n    fetchUserInfoEpic() {},\n  },\n});\n\nexport const { setProfile, setSettings, fetchUserInfoEpic } = auth0Slice.actions;\nexport const { reducer: userReducer, name: userName } = auth0Slice;\n\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { AUTH0_CLIENT_ID, AUTH0_DOMAIN } from '../../config.json';\nimport Auth0Lock from 'auth0-lock';\nimport { createContext, useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setIdToken } from '../store/auth0/auth0.slice';\nimport { fetchUserInfoEpic } from '../store/user/user.slice';\nimport { useTheme } from '@chakra-ui/core';\n\ninterface Auth0ContextState {\n  lock: Auth0LockStatic;\n}\n\ninterface AUth0ProviderProps {\n  children: ReactNode;\n}\n\nconst Auth0Context = createContext<Auth0ContextState>(null);\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({ children }: AUth0ProviderProps) => {\n  const [lock, setLock] = useState<Auth0LockStatic>(null);\n  const dispatch = useDispatch();\n\n  const theme = useTheme();\n\n  useEffect(() => {\n    const auth0Lock = new Auth0Lock(AUTH0_CLIENT_ID, AUTH0_DOMAIN, {\n      theme: {\n        hideMainScreenTitle: true,\n        logo: '',\n        primaryColor: theme.colors['primary-500'],\n      },\n      auth: {\n        responseType: 'token id_token',\n        params: {\n          scope: 'openid profile email',\n        },\n      },\n    });\n\n    setLock(auth0Lock);\n\n    auth0Lock.on('authenticated', authResult => {\n      const { idToken } = authResult;\n      dispatch(setIdToken(idToken));\n      dispatch(fetchUserInfoEpic());\n    });\n  }, []);\n\n  return (\n    <Auth0Context.Provider value={{ lock }}>{children}</Auth0Context.Provider>\n  );\n};\n","import { Link as RLink, LinkGetProps } from '@reach/router';\nimport React, { ReactNode, useState } from 'react';\nimport { useTheme } from '@chakra-ui/core';\n\ninterface NavLinkProps {\n  to: string;\n  children: ReactNode;\n  color?: string;\n  hoverColor?: string;\n  small?: boolean;\n}\n\nexport const NavLink = ({ to, children, color, hoverColor, small }: NavLinkProps) => {\n  const theme = useTheme();\n\n  const [isHover, setHover] = useState(false);\n\n  const usedHoverColor = hoverColor || theme.colors['primary-500'];\n\n  const defaultStyles = {\n    color: isHover ? usedHoverColor : color,\n    transition: 'all 0.15s ease-out',\n    fontSize: small ? theme.fontSizes.sm : theme.fontSizes.md,\n  };\n\n  const isPartiallyActive = ({ isPartiallyCurrent }: LinkGetProps) => {\n    return isPartiallyCurrent ? { style: { ...defaultStyles, color: usedHoverColor } } : {};\n  };\n\n  return (\n    <RLink\n      to={to}\n      getProps={isPartiallyActive}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      style={{\n        ...defaultStyles,\n      }}\n    >\n      {children}\n    </RLink>\n  );\n};\n","import { RootState } from '../root.reducer';\n\nexport class SelfSelector {\n  static dreamTitle = (state: RootState) => state.self.dream?.title;\n  static self = (state: RootState) => state.self.self;\n  static dream = (state: RootState) => state.self.dream;\n  static dreamId = (state: RootState) => state.self.dream.id;\n  static resultGoal = (state: RootState) => state.self.resultGoal;\n  static progressGoals = (state: RootState) => state.self.progressGoals;\n}\n","import { RootState } from '../root.reducer';\n\nexport class DashboardUiSelector {\n  static sideNavOpened = (state: RootState) => state.dashboardUi.sideNavOpened;\n  static isLoading = (state: RootState) => state.dashboardUi.isLoading;\n  static isSaving = (state: RootState) => state.dashboardUi.isSaving;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface DashboardUiState {\n  sideNavOpened: boolean;\n  isLoading: boolean;\n  isSaving: boolean;\n}\n\nconst initialState: DashboardUiState = {\n  sideNavOpened: false,\n  isLoading: false,\n  isSaving: false,\n};\n\nconst dashboardUiSlice = createSlice({\n  name: 'dashboardUi',\n  initialState,\n  reducers: {\n    toggleSideNav(state) {\n      state.sideNavOpened = !state.sideNavOpened;\n    },\n    setIsLoading(state, action: PayloadAction<boolean>) {\n      state.isLoading = action.payload;\n    },\n    setIsSaving(state, action: PayloadAction<boolean>) {\n      state.isSaving = action.payload;\n    },\n  },\n});\n\nexport const {\n  toggleSideNav,\n  setIsLoading,\n  setIsSaving,\n} = dashboardUiSlice.actions;\nexport const {\n  reducer: dashboardUiReducer,\n  name: dashboardUiName,\n} = dashboardUiSlice;\n","import React from 'react';\nimport { Box, List, ListItem, Divider } from '@chakra-ui/core';\nimport { NavLink } from '../shared/components/NavLink';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as _ from 'lodash';\nimport { SelfSelector } from '../shared/store/self/self.selector';\nimport { DashboardUiSelector } from '../shared/store/dashboard-ui/dashboard-ui.selector';\nimport { Transition } from 'react-spring/renderprops';\nimport { useTheme } from '@chakra-ui/core';\nimport { toggleSideNav } from '../shared/store/dashboard-ui/dashboard-ui.slice';\n\ninterface DashboardSideNavProps {\n  pathname: string;\n}\n\nexport const DashboardSideNav = ({ pathname }: DashboardSideNavProps) => {\n  const dispatch = useDispatch();\n  const sideNavOpened = useSelector(DashboardUiSelector.sideNavOpened);\n\n  const self = useSelector(SelfSelector.self);\n  const hasSelf = !_.isEmpty(self);\n\n  const theme = useTheme();\n  const width = theme.sizes['56'];\n\n  const onToggleSideNav = () => {\n    // Solve the flickering issue\n    dispatch(toggleSideNav());\n  };\n\n  return (\n    <Transition\n      items={sideNavOpened}\n      config={{ duration: 200 }}\n      from={{ transform: `translate(-${width},0)` }}\n      enter={{ transform: 'translate(0,0)' }}\n      leave={{ transform: `translate(-${width},0)` }}\n    >\n      {sideNavOpened => props => (\n        <Box\n          display={{ xs: sideNavOpened ? 'block' : 'none', xl: 'block' }}\n          position={{ xs: 'absolute', xl: 'inherit' }}\n          height={{ xs: '100%', xl: 'auto' }}\n          minW={width}\n          maxW={width}\n          shadow=\"md\"\n          zIndex={10}\n          bg=\"primary-50\"\n          p={6}\n          fontSize=\"sm\"\n          transform={{ xs: props.transform, xl: 'translate(0,0)' }}\n        >\n          <List>\n            <ListItem onClick={onToggleSideNav}>\n              <NavLink to=\"goals\">Goals</NavLink>\n            </ListItem>\n            {hasSelf && (\n              <ListItem mt={4} onClick={onToggleSideNav}>\n                <NavLink to=\"plans\">Plans</NavLink>\n              </ListItem>\n            )}\n            {hasSelf && (\n              <ListItem mt={4} onClick={onToggleSideNav}>\n                <NavLink to=\"daily-actions\">Daily Actions</NavLink>\n              </ListItem>\n            )}\n            {hasSelf && (\n              <ListItem mt={4} onClick={onToggleSideNav}>\n                <NavLink to=\"weekly-summary\">Weekly Summary</NavLink>\n              </ListItem>\n            )}\n\n            <Divider my={5} />\n\n            <ListItem mt={4} onClick={onToggleSideNav}>\n              <NavLink to=\"gratitude\">Gratitude</NavLink>\n            </ListItem>\n\n            <Divider my={5} />\n\n            <ListItem onClick={onToggleSideNav}>\n              <NavLink to=\"profile\">My Profile</NavLink>\n            </ListItem>\n            <ListItem mt={4} onClick={onToggleSideNav}>\n              <NavLink to=\"settings\">Settings</NavLink>\n            </ListItem>\n          </List>\n        </Box>\n      )}\n    </Transition>\n  );\n};\n","import { RootState } from '../root.reducer';\n\nexport class UserSelector {\n  static profile = (state: RootState) => state.user.profile;\n  static settings = (state: RootState) => state.user.settings;\n  static themeColor = (state: RootState) => state.user.settings.themeColor;\n}\n","import React from 'react';\nimport { Flex, Box, Link, MenuList, MenuDivider, Menu, MenuButton, MenuItem, Avatar } from '@chakra-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { navigate } from '@reach/router';\nimport { UserSelector } from '../shared/store/user/user.selector';\nimport { MdMenu, MdClose } from 'react-icons/md';\nimport { toggleSideNav } from '../shared/store/dashboard-ui/dashboard-ui.slice';\nimport { DashboardUiSelector } from '../shared/store/dashboard-ui/dashboard-ui.selector';\n\ninterface DashboardHeaderProps {}\n\nexport const DashboardHeader = (props: DashboardHeaderProps) => {\n  const dispatch = useDispatch();\n  const sideNavOpened = useSelector(DashboardUiSelector.sideNavOpened);\n\n  const { pictureUrl, fullName } = useSelector(UserSelector.profile) || {};\n\n  const navigateTo = (page: string) => async () => {\n    await navigate(`/dashboard/${page}`);\n  };\n\n  const onToggleSideNav = () => {\n    dispatch(toggleSideNav());\n  };\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      zIndex={100}\n      bg=\"primary-500\"\n      px={{ xs: 3, lg: 8 }}\n      h={12}\n      shadow=\"md\"\n    >\n      <Flex alignItems=\"center\">\n        <Box\n          display={{ xs: 'block', xl: 'none' }}\n          color=\"white\"\n          fontSize=\"2xl\"\n          as={sideNavOpened ? MdClose : MdMenu}\n          mr={2}\n          cursor=\"pointer\"\n          onClick={onToggleSideNav}\n        />\n        <Link href=\"#\" fontSize=\"xl\" color=\"white\" _hover={{ color: 'primary-100' }} letterSpacing={0.5}>\n          SelfPlat\n        </Link>\n      </Flex>\n      <Menu>\n        <MenuButton as={Box}>\n          <Avatar name={fullName} width={10} height={10} src={pictureUrl} />\n        </MenuButton>\n        <MenuList>\n          <MenuItem onClick={navigateTo('profile')}>My Profile</MenuItem>\n          <MenuItem onClick={navigateTo('settings')}>Settings</MenuItem>\n          <MenuDivider />\n          <MenuItem>Logout</MenuItem>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { CreateSelfDto, DreamApi, ProgressGoalApi, ResultGoalApi, SelfApi } from '@selfplat/api-model';\nimport {\n  CreateResultGoalPayload,\n  UpdateDreamTitlePayload,\n  UpdateResultGoalTitlePayload,\n  CreateProgressGoalPayload,\n  UpdateProgressGoalTitlePayload,\n  SetProgressGoalTitlePayload,\n} from './self.type';\n\nexport interface SelfState {\n  self: SelfApi;\n  dream: DreamApi;\n  resultGoal: ResultGoalApi;\n  progressGoals: ProgressGoalApi[];\n}\n\nconst initialState: SelfState = {\n  self: null,\n  dream: null,\n  resultGoal: null,\n  progressGoals: [],\n};\n\nconst selfSlice = createSlice({\n  name: 'self',\n  initialState,\n  reducers: {\n    // Self\n    fetchSelfEpic() {},\n    createSelfEpic(state, action: PayloadAction<CreateSelfDto>) {},\n    setSelf(state, action: PayloadAction<SelfApi>) {\n      state.self = action.payload;\n    },\n\n    // Dream\n    setDream(state, action: PayloadAction<DreamApi>) {\n      state.dream = action.payload;\n    },\n    setDreamTitle(state, action: PayloadAction<string>) {\n      state.dream.title = action.payload;\n    },\n    updateDreamTitleEpic(state, action: PayloadAction<UpdateDreamTitlePayload>) {},\n\n    // Result Goal\n    createResultGoalEpic(state, action: PayloadAction<CreateResultGoalPayload>) {},\n    setResultGoal(state, action: PayloadAction<ResultGoalApi>) {\n      state.resultGoal = action.payload;\n    },\n    setResultGoalTitle(state, action: PayloadAction<string>) {\n      state.resultGoal.title = action.payload;\n    },\n    updateResultGoalTitleEpic(state, action: PayloadAction<UpdateResultGoalTitlePayload>) {},\n\n    // Progress Goal\n    createProgressGoalEpic(state, action: PayloadAction<CreateProgressGoalPayload>) {},\n    setProgressGoals(state, action: PayloadAction<ProgressGoalApi[]>) {\n      state.progressGoals = action.payload;\n    },\n    setProgressGoalTitle(state, action: PayloadAction<SetProgressGoalTitlePayload>) {\n      const { idx, title } = action.payload;\n      state.progressGoals[idx].title = title;\n    },\n    updateProgressGoalTitleEpic(state, action: PayloadAction<UpdateProgressGoalTitlePayload>) {},\n    addProgressGoal(state, action: PayloadAction<ProgressGoalApi>) {\n      state.progressGoals.push(action.payload);\n    },\n  },\n});\n\nexport const {\n  setSelf,\n  setDream,\n  setResultGoal,\n  setProgressGoals,\n  setDreamTitle,\n  fetchSelfEpic,\n  updateDreamTitleEpic,\n  createSelfEpic,\n  createResultGoalEpic,\n  setResultGoalTitle,\n  updateResultGoalTitleEpic,\n  createProgressGoalEpic,\n  setProgressGoalTitle,\n  updateProgressGoalTitleEpic,\n  addProgressGoal,\n} = selfSlice.actions;\nexport const { reducer: selfReducer, name: selfName } = selfSlice;\n","import React, { ReactNode, useEffect } from 'react';\nimport { Flex, Spinner } from '@chakra-ui/core';\nimport { DashboardSideNav } from './DashboardSideNav';\nimport { RouteComponentProps } from '@reach/router';\nimport { DashboardHeader } from './DashboardHeader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSelfEpic } from '../shared/store/self/self.slice';\nimport { DashboardUiSelector } from '../shared/store/dashboard-ui/dashboard-ui.selector';\n\ninterface DashboardProps extends RouteComponentProps {\n  children: ReactNode;\n}\n\nexport const Dashboard = ({ children, location }: DashboardProps) => {\n  const { pathname } = location;\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(DashboardUiSelector.isLoading);\n  const isSaving = useSelector(DashboardUiSelector.isSaving);\n\n  useEffect(() => {\n    dispatch(fetchSelfEpic());\n  }, []);\n\n  return (\n    <>\n      <DashboardHeader />\n      <Flex flexGrow={1} position={{ xs: 'relative', xl: 'inherit' }}>\n        <DashboardSideNav pathname={pathname} />\n        <Flex flexDirection=\"column\" flexGrow={1} p={[5, 5, 12]} bg=\"grey-50\">\n          {!isLoading && children}\n          {(isLoading || isSaving) && (\n            <Spinner\n              position=\"absolute\"\n              right={[5, 5, 12]}\n              bottom={[5, 5, 12]}\n              color=\"primary-500\"\n              size=\"lg\"\n            />\n          )}\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { Button, ButtonProps } from '@chakra-ui/core';\n\nexport interface PrimaryOutlineButtonProps extends ButtonProps {\n  children: ReactNode;\n}\n\nexport const PrimaryOutlineButton = ({ children, ...props }: PrimaryOutlineButtonProps) => {\n  return (\n    <Button fontSize=\"sm\" color=\"primary-500\" variant=\"outline\" {...props}>\n      {children}\n    </Button>\n  );\n};\n","import React from 'react';\nimport { Input as CInput, InputProps as CInputProps } from '@chakra-ui/core';\n\ninterface InputProps extends CInputProps {}\n\nexport const Input = React.forwardRef(({ ...props }: InputProps, ref: React.Ref<any>) => {\n  return <CInput {...props} focusBorderColor=\"primary-200\" errorBorderColor=\"alert-300\" ref={ref} />;\n});\n","import React, { ReactNode } from 'react';\nimport {\n  ModalCloseButton,\n  ModalContent,\n  ModalOverlay,\n  Modal as CModal,\n} from '@chakra-ui/core';\nimport { Transition } from 'react-spring/renderprops';\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: ReactNode;\n}\n\nexport const Modal = ({ isOpen, onClose, children }: ModalProps) => {\n  return (\n    <Transition\n      items={isOpen}\n      config={{ duration: 200 }}\n      from={{ opacity: 0, transform: `translate3d(0, 10px, 0)` }}\n      enter={{ opacity: 1, transform: `translate3d(0, 0, 0)` }}\n      leave={{ opacity: 0, transform: `translate3d(0, 10px, 0)` }}\n    >\n      {isOpen => props => (\n        <CModal isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\n          <ModalOverlay {...props} />\n          <ModalContent\n            {...props}\n            minW={{ xs: '90%', sm: '75%', lg: 'xl' }}\n            maxW={{ xs: '90%', sm: '75%', lg: 'xl' }}\n          >\n            <ModalCloseButton right={{ xs: 2, lg: 5 }} />\n            {children}\n          </ModalContent>\n        </CModal>\n      )}\n    </Transition>\n  );\n};\n","import { FormControl, FormHelperText, FormLabel, ModalBody, ModalFooter } from '@chakra-ui/core';\nimport React, { useState } from 'react';\nimport { PrimaryOutlineButton } from '../../../../shared/components/PrimaryOutlineButton';\nimport { Input } from '../../../../shared/components/Input';\nimport { Modal } from '../../../../shared/components/Modal';\n\ninterface CreateDreamModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmitForm: (dreamTitle: string) => void;\n}\n\nexport const CreateDreamModal = ({ isOpen, onClose, onSubmitForm }: CreateDreamModalProps) => {\n  const [dreamValue, setDreamValue] = useState('');\n\n  const onDreamValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDreamValue(event.target.value);\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalBody\n        mt={8}\n        p={{ xs: 3, lg: 8 }}\n        minH={64}\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n      >\n        <FormControl>\n          <FormLabel htmlFor=\"dream\">Dream:</FormLabel>\n          <Input id=\"dream\" value={dreamValue} onChange={onDreamValueChange} />\n          <FormHelperText>ex. I would like to have freedom in money and time</FormHelperText>\n        </FormControl>\n\n        <FormControl isDisabled>\n          <Input textAlign=\"center\" fontSize=\"small\" value={new Date().toDateString()} />\n        </FormControl>\n      </ModalBody>\n\n      <ModalFooter>\n        <PrimaryOutlineButton isDisabled={!dreamValue} onClick={() => onSubmitForm(dreamValue)}>\n          Get Started\n        </PrimaryOutlineButton>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { Heading } from '@chakra-ui/core';\nimport { Box, Text } from '@chakra-ui/core/dist';\n\ninterface PageTitleProps {\n  children: ReactNode;\n  subtitle?: string;\n}\n\nexport const PageTitle = ({ children, subtitle }: PageTitleProps) => {\n  return (\n    <Box mb={5}>\n      <Heading as=\"h1\" fontWeight=\"bold\" letterSpacing={2} size=\"md\">\n        {children}\n      </Heading>\n      {subtitle && (\n        <Text fontSize=\"md\" fontStyle=\"italic\">\n          {subtitle}\n        </Text>\n      )}\n    </Box>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { Flex, BoxProps } from '@chakra-ui/core';\n\ninterface FlexCardProps extends BoxProps {\n  children: ReactNode;\n}\n\nexport const FlexCard = ({ children, ...props }: FlexCardProps) => {\n  return (\n    <Flex direction=\"column\" bg=\"white\" shadow=\"sm\" p={5} {...props}>\n      {children}\n    </Flex>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { Flex } from '@chakra-ui/core';\n\ninterface PageContainerProps {\n  children: ReactNode;\n}\n\nexport const PageContainer = ({ children }: PageContainerProps) => {\n  return <Flex direction=\"column\">{children}</Flex>;\n};\n","import React, { ReactNode } from 'react';\nimport { Box, PseudoBox, Divider, Flex } from '@chakra-ui/core';\n\ninterface QuoteProps {\n  quote: string | ReactNode;\n  author?: string | ReactNode;\n}\n\nexport const Quote = ({ quote, author }: QuoteProps) => {\n  return (\n    <Flex lineHeight={3}>\n      <Divider orientation=\"vertical\" borderWidth={[5, 5, 8, 8]} borderColor=\"primary-500\" />\n      <Box>\n        <PseudoBox\n          as=\"blockquote\"\n          fontStyle=\"italic\"\n          px={{ xs: 3, md: 24, lg: 10 }}\n          pt={{ xs: 3, lg: 5 }}\n          mb={3}\n          letterSpacing={{ xs: 0.2, lg: 0.5 }}\n        >\n          {quote}\n        </PseudoBox>\n        {author && (\n          <PseudoBox\n            as=\"cite\"\n            display=\"block\"\n            textAlign=\"right\"\n            pr={3}\n            letterSpacing={{ xs: 0.5, lg: 1 }}\n            _before={{ content: \"'— '\" } as any}\n          >\n            {author}\n          </PseudoBox>\n        )}\n      </Box>\n    </Flex>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { Text, Box, Flex, Avatar, Divider, BoxProps } from '@chakra-ui/core';\n\ninterface AdviserCardProps extends BoxProps {\n  children: ReactNode;\n}\n\nexport const AdviserCard = ({ children, ...props }: AdviserCardProps) => {\n  return (\n    <Box bg=\"white\" p={{ xs: 3, md: 8 }} {...props} shadow=\"sm\">\n      <Flex justifyContent=\"flex-end\">\n        <Box textAlign=\"center\">\n          {/* Todo: change the url dynamically */}\n          <Avatar src=\"https://image.flaticon.com/icons/svg/167/167752.svg\" />\n          <Text fontSize=\"xs\" fontWeight=\"bold\" color=\"primary-700\" letterSpacing={{ xs: 0.2, lg: 0.5 }}>\n            Master\n          </Text>\n        </Box>\n      </Flex>\n      <Divider my={2} borderColor=\"primary-500\" borderWidth={2} />\n      <Flex direction=\"column\">{children}</Flex>\n    </Box>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { PseudoBoxProps, PseudoBox } from '@chakra-ui/core';\n\ninterface AdviserQuoteProps extends PseudoBoxProps {\n  children: ReactNode;\n}\n\nexport const AdviserQuote = ({ children, ...props }: AdviserQuoteProps) => {\n  return (\n    <PseudoBox\n      as=\"blockquote\"\n      letterSpacing={{ xs: 0.5, lg: 1 }}\n      lineHeight={{ xs: 1.6, lg: 2 }}\n      p={2}\n      _before={{ content: 'open-quote', color: 'primary-800', fontWeight: 'bold', mr: 1 } as any}\n      _after={{ content: 'close-quote', color: 'primary-800', fontWeight: 'bold', ml: 1 } as any}\n      {...props}\n    >\n      {children}\n    </PseudoBox>\n  );\n};\n","import React from 'react';\nimport { useDisclosure } from '@chakra-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { CreateDreamModal } from './CreateDreamModal/CreateDreamModal';\nimport { PageTitle } from '../../../shared/components/PageTitle';\nimport { FlexCard } from '../../../shared/components/FlexCard';\nimport { PageContainer } from '../../../shared/components/PageContainer';\nimport { PrimaryOutlineButton } from '../../../shared/components/PrimaryOutlineButton';\nimport { Quote } from '../../../shared/components/Quote';\nimport { AdviserCard } from '../../../shared/components/AdviserCard';\nimport { AdviserQuote } from '../../../shared/components/AdviserQuote';\nimport { SimpleGrid } from '@chakra-ui/core/dist';\nimport { createSelfEpic } from '../../../shared/store/self/self.slice';\n\nexport const WelcomeSubPage = () => {\n  const dispatch = useDispatch();\n\n  const { isOpen: isModalOpen, onOpen: onOpenModal, onClose: onCloseModal } = useDisclosure();\n\n  const onSubmitForm = (dreamTitle: string) => {\n    dispatch(createSelfEpic({ title: dreamTitle }));\n  };\n\n  return (\n    <PageContainer>\n      <PageTitle>Get Started</PageTitle>\n\n      <SimpleGrid columns={{ xs: 1, lg: 2 }} spacing={10}>\n        <AdviserCard>\n          <AdviserQuote>Welcome to SelfPlat, this platform is carefully crafted for you.</AdviserQuote>\n          <AdviserQuote>It's very simple but powerful.</AdviserQuote>\n          <AdviserQuote>Everything is about consistent.</AdviserQuote>\n          <AdviserQuote>your dream will be achieved if you keep working on it everyday.</AdviserQuote>\n          <AdviserQuote>Are you ready to start this long journey?</AdviserQuote>\n          <PrimaryOutlineButton mt={3} onClick={onOpenModal} alignSelf=\"flex-end\">\n            Get started\n          </PrimaryOutlineButton>\n        </AdviserCard>\n\n        <FlexCard justifyContent=\"center\" alignItems=\"center\">\n          <Quote\n            quote={\n              <>\n                A <b>dream</b> written down with a date becomes a goal. <br />A <b>goal</b> broken down into{' '}\n                <b>steps</b> becomes a plan. <br />A <b>plan</b> backed by <b>action</b> makes your dreams come true.\n              </>\n            }\n            author=\"Greg Reid\"\n          />\n        </FlexCard>\n      </SimpleGrid>\n\n      <CreateDreamModal isOpen={isModalOpen} onClose={onCloseModal} onSubmitForm={onSubmitForm} />\n    </PageContainer>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { Divider, Text, BoxProps } from '@chakra-ui/core';\nimport { FlexCard } from './FlexCard';\n\nexport interface EntityCardProps extends BoxProps {\n  children: ReactNode;\n  entityTite: string;\n}\n\nexport const EntityCard = ({\n  children,\n  entityTite,\n  ...props\n}: EntityCardProps) => {\n  return (\n    <FlexCard {...props}>\n      {children}\n      <Divider mt={0} mb={2} borderColor=\"primary-500\" borderWidth={2} />\n      <Text\n        alignSelf=\"flex-end\"\n        fontSize=\"xs\"\n        fontWeight=\"bold\"\n        letterSpacing={1}\n      >\n        {entityTite}\n      </Text>\n    </FlexCard>\n  );\n};\n","import React, { useState } from 'react';\nimport { FormControl, FormHelperText, FormLabel, ModalBody, ModalFooter } from '@chakra-ui/core';\nimport { Input } from '../../../../shared/components/Input';\nimport { PrimaryOutlineButton } from '../../../../shared/components/PrimaryOutlineButton';\nimport { Modal } from '../../../../shared/components/Modal';\nimport { DreamApi } from '@selfplat/api-model';\nimport { AdviserQuote } from '../../../../shared/components/AdviserQuote';\n\ninterface CreateResultGoalModalProps {\n  dream: DreamApi;\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmitForm: (resultGoalTitle: string) => void;\n}\n\nexport const CreateResultGoalModal = ({ isOpen, onClose, onSubmitForm, dream }: CreateResultGoalModalProps) => {\n  const [resultGoalValue, setResultGoalValue] = useState('');\n\n  const onResultGoalValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setResultGoalValue(event.target.value);\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalBody mt={8} p={{ xs: 3, lg: 8 }} display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\">\n        <AdviserQuote mb={5}>{dream.title}</AdviserQuote>\n\n        <FormControl>\n          <FormLabel htmlFor=\"resultGoal\">Result Goal:</FormLabel>\n          <Input id=\"resultGoal\" value={resultGoalValue} onChange={onResultGoalValueChange} />\n          <FormHelperText>ex. I will release selfplat (MVP) by the end of June</FormHelperText>\n        </FormControl>\n      </ModalBody>\n\n      <ModalFooter>\n        <PrimaryOutlineButton isDisabled={!resultGoalValue} onClick={() => onSubmitForm(resultGoalValue)}>\n          Create\n        </PrimaryOutlineButton>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport { Flex, FormControl, FormHelperText, FormLabel, Icon, ModalBody, ModalFooter } from '@chakra-ui/core';\nimport { Input } from '../../../../shared/components/Input';\nimport { PrimaryOutlineButton } from '../../../../shared/components/PrimaryOutlineButton';\nimport { Modal } from '../../../../shared/components/Modal';\nimport { DreamApi, ResultGoalApi } from '@selfplat/api-model';\nimport { AdviserQuote } from '../../../../shared/components/AdviserQuote';\n\ninterface CreateProgressGoalModalProps {\n  dream: DreamApi;\n  resultGoal: ResultGoalApi;\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmitForm: (progressGoalTitle: string) => void;\n}\n\nexport const CreateProgressGoalModal = ({\n  isOpen,\n  onClose,\n  onSubmitForm,\n  dream,\n  resultGoal,\n}: CreateProgressGoalModalProps) => {\n  const [progressGoalValue, setProgressGoalValue] = useState('');\n\n  const onProgressGoalValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setProgressGoalValue(event.target.value);\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalBody mt={8} p={{ xs: 3, lg: 8 }} display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\">\n        <AdviserQuote>{dream.title}</AdviserQuote>\n        <Flex my={1} justifyContent=\"center\" alignItems=\"center\">\n          <Icon name=\"arrow-down\" size=\"5\" color=\"primary-500\" />\n        </Flex>\n        <AdviserQuote mb={5}>{resultGoal.title}</AdviserQuote>\n\n        <FormControl>\n          <FormLabel htmlFor=\"progressGoal\">Progress Goal:</FormLabel>\n          <Input id=\"progressGoal\" value={progressGoalValue} onChange={onProgressGoalValueChange} />\n          <FormHelperText>ex. I will release selfplat (MVP) by the end of June</FormHelperText>\n        </FormControl>\n      </ModalBody>\n\n      <ModalFooter>\n        <PrimaryOutlineButton isDisabled={!progressGoalValue} onClick={() => onSubmitForm(progressGoalValue)}>\n          Create\n        </PrimaryOutlineButton>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { PageTitle } from '../../../shared/components/PageTitle';\nimport { PageContainer } from '../../../shared/components/PageContainer';\nimport { SimpleGrid, Textarea, IconButton, useDisclosure, Flex, Icon, Divider } from '@chakra-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelfSelector } from '../../../shared/store/self/self.selector';\nimport {\n  createResultGoalEpic,\n  setDreamTitle,\n  updateDreamTitleEpic,\n  setResultGoalTitle,\n  updateResultGoalTitleEpic,\n  createProgressGoalEpic,\n  setProgressGoalTitle,\n  updateProgressGoalTitleEpic,\n} from '../../../shared/store/self/self.slice';\nimport { EntityCard } from '../../../shared/components/EntityCard';\nimport { CreateResultGoalModal } from './CreateResultGoalModal/CreateResultGoalModal';\nimport { CreateProgressGoalModal } from './CreateProgressGoalModal/CreateProgressGoalModal';\n\nexport const GoalsSubPage = () => {\n  const dispatch = useDispatch();\n  const dream = useSelector(SelfSelector.dream);\n  const resultGoal = useSelector(SelfSelector.resultGoal);\n  const progressGoals = useSelector(SelfSelector.progressGoals);\n\n  const {\n    isOpen: isCreateResultGoalModalOpen,\n    onOpen: onOpenCreateResultGoalModal,\n    onClose: onCloseCreateResultGoalModal,\n  } = useDisclosure();\n\n  const {\n    isOpen: isCreateProgressGoalModalOpen,\n    onOpen: onOpenProgressResultGoalModal,\n    onClose: onCloseProgressResultGoalModal,\n  } = useDisclosure();\n\n  const onUpdateDreamTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setDreamTitle(event.target.value));\n    dispatch(updateDreamTitleEpic({ id: dream.id, title: event.target.value }));\n  };\n\n  const onUpdateResultGoalTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setResultGoalTitle(event.target.value));\n    dispatch(updateResultGoalTitleEpic({ id: resultGoal.id, title: event.target.value }));\n  };\n\n  const onCreateResultGoal = (resultGoalTitle: string) => {\n    onCloseCreateResultGoalModal();\n    dispatch(createResultGoalEpic({ dreamId: dream.id, title: resultGoalTitle }));\n  };\n\n  const onUpdateProgressGoalTitle = (id: string, idx: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setProgressGoalTitle({ idx, title: event.target.value }));\n    dispatch(updateProgressGoalTitleEpic({ id: id, title: event.target.value }));\n  };\n\n  const onCreateProgressGoal = (progressGoalTitle: string) => {\n    onCloseProgressResultGoalModal();\n    dispatch(createProgressGoalEpic({ dreamId: dream.id, resultGoalId: resultGoal.id, title: progressGoalTitle }));\n  };\n\n  return (\n    <PageContainer>\n      <PageTitle subtitle=\"A dream written down with a date becomes a goal.\">Goals</PageTitle>\n\n      <SimpleGrid columns={1}>\n        <EntityCard entityTite=\"Dream\">\n          <Textarea\n            variant=\"unstyled\"\n            resize=\"none\"\n            rows={2}\n            minH=\"auto\"\n            value={dream.title}\n            onChange={onUpdateDreamTitle}\n          />\n        </EntityCard>\n\n        <Flex my={1} justifyContent=\"center\" alignItems=\"center\">\n          <Icon name=\"arrow-down\" size=\"5\" color=\"primary-500\" />\n        </Flex>\n\n        <EntityCard entityTite=\"Result Goal\">\n          {!resultGoal && (\n            <IconButton\n              alignSelf=\"flex-end\"\n              aria-label=\"create result goal\"\n              variant=\"outline\"\n              color=\"primary-500\"\n              icon=\"add\"\n              mb={2}\n              onClick={onOpenCreateResultGoalModal}\n            />\n          )}\n          {resultGoal && (\n            <Textarea\n              variant=\"unstyled\"\n              resize=\"none\"\n              rows={2}\n              minH=\"auto\"\n              value={resultGoal.title}\n              onChange={onUpdateResultGoalTitle}\n            />\n          )}\n        </EntityCard>\n\n        <Flex my={1} justifyContent=\"center\" alignItems=\"center\">\n          <Icon name=\"arrow-down\" size=\"5\" color=\"primary-500\" />\n        </Flex>\n\n        {resultGoal && (\n          <EntityCard entityTite=\"Progress Goals\">\n            <IconButton\n              alignSelf=\"flex-end\"\n              aria-label=\"create progress goal\"\n              variant=\"outline\"\n              color=\"primary-500\"\n              icon=\"add\"\n              onClick={onOpenProgressResultGoalModal}\n            />\n\n            {progressGoals.map(({ id, title }, idx) => (\n              <>\n                <Textarea\n                  id={id}\n                  variant=\"unstyled\"\n                  resize=\"none\"\n                  rows={2}\n                  minH=\"auto\"\n                  value={title}\n                  borderBottomWidth={idx !== progressGoals.length - 1 ? 1 : 0}\n                  borderColor=\"grey-100\"\n                  borderRadius={0}\n                  onChange={onUpdateProgressGoalTitle(id, idx)}\n                />\n              </>\n            ))}\n          </EntityCard>\n        )}\n      </SimpleGrid>\n\n      <CreateResultGoalModal\n        isOpen={isCreateResultGoalModalOpen}\n        onClose={onCloseCreateResultGoalModal}\n        onSubmitForm={onCreateResultGoal}\n        dream={dream}\n      />\n\n      {resultGoal && (\n        <CreateProgressGoalModal\n          dream={dream}\n          resultGoal={resultGoal}\n          isOpen={isCreateProgressGoalModalOpen}\n          onClose={onCloseProgressResultGoalModal}\n          onSubmitForm={onCreateProgressGoal}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { useSelector } from 'react-redux';\nimport * as _ from 'lodash';\nimport { WelcomeSubPage } from './WelcomeSubPage/WelcomeSubPage';\nimport { SelfSelector } from '../../shared/store/self/self.selector';\nimport { GoalsSubPage } from './GoalsSubPage/GoalsSubPage';\n\nexport interface GoalsPageProps extends RouteComponentProps {}\n\nexport const GoalsPage = (props: GoalsPageProps) => {\n  const self = useSelector(SelfSelector.self);\n\n  if (_.isEmpty(self)) {\n    return <WelcomeSubPage />;\n  }\n\n  return <GoalsSubPage />;\n};\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { Box, Flex, Text } from '@chakra-ui/core';\n\nexport interface PlansPageProps extends RouteComponentProps {}\n\nexport const PlansPage = (props: PlansPageProps) => {\n  return (\n    <>\n      <Text mb={3} fontSize=\"xl\" letterSpacing={0.5}>\n        Plans Page\n      </Text>\n      <Flex>\n        <Box shadow=\"md\" flexGrow={1} p={3}>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet asperiores, eligendi esse excepturi fugiat\n          fugit magni modi obcaecati quis quo. Aut dolor ea in libero optio quidem repellat repudiandae similique.\n        </Box>\n      </Flex>\n    </>\n  );\n};\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { Box, Flex, Text } from '@chakra-ui/core';\n\nexport interface WeeklySummaryPageProps extends RouteComponentProps {}\n\nexport const WeeklySummaryPage = (props: WeeklySummaryPageProps) => {\n  return (\n    <>\n      <Text mb={3} fontSize=\"xl\" letterSpacing={0.5}>\n        Weekly Summary Page\n      </Text>\n      <Flex>\n        <Box shadow=\"md\" flexGrow={1} p={3}>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet asperiores, eligendi esse excepturi fugiat\n          fugit magni modi obcaecati quis quo. Aut dolor ea in libero optio quidem repellat repudiandae similique.\n        </Box>\n      </Flex>\n    </>\n  );\n};\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { Box, Flex, Text } from '@chakra-ui/core';\n\nexport interface GratitudePageProps extends RouteComponentProps {}\n\nexport const GratitudePage = (props: GratitudePageProps) => {\n  return (\n    <>\n      <Text mb={3} fontSize=\"xl\" letterSpacing={0.5}>\n        Gratitude Page\n      </Text>\n      <Flex>\n        <Box shadow=\"md\" flexGrow={1} p={3}>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet asperiores, eligendi esse excepturi fugiat\n          fugit magni modi obcaecati quis quo. Aut dolor ea in libero optio quidem repellat repudiandae similique.\n        </Box>\n      </Flex>\n    </>\n  );\n};\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { useAuth0 } from '../shared/auth0/Auth0Provider';\n// import { useSelector } from 'react-redux';\n// import { Auth0Selector } from '../../shared/store/auth0/auth0Selector';\n\ninterface HomePageProps extends RouteComponentProps {}\n\nexport const Home = (props: HomePageProps) => {\n  const { lock } = useAuth0();\n  // const profile = useSelector(Auth0Selector.profile);\n  // const accessToken = useSelector(Auth0Selector.accessToken);\n  // const idToken = useSelector(Auth0Selector.idToken);\n  //\n  // console.log('profile', profile);\n  // console.log('accessToken', accessToken);\n  // console.log('idToken', idToken);\n\n  return <button onClick={() => lock.show()}>Login</button>;\n};\n","import axios, { AxiosInstance } from 'axios';\nimport { API_SERVER_URL } from './../../config.json';\nimport { Store } from '../store/root.store';\nimport { ajax } from 'rxjs/ajax';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nexport class RequestService {\n  private static bearerToken: string;\n\n  static init(store: Store) {\n    store.subscribe(() => {\n      const { auth0 } = store.getState();\n      RequestService.bearerToken = auth0.idToken;\n      return () => {};\n    });\n  }\n\n  static getInstance(): AxiosInstance {\n    return axios.create({\n      baseURL: API_SERVER_URL,\n      headers: RequestService.getHeaders(),\n    });\n  }\n\n  static get<T>(path: string): Observable<T> {\n    return ajax.getJSON<T>(\n      RequestService.getFullUrl(path),\n      RequestService.getHeaders(),\n    );\n  }\n\n  static delete<T>(path: string, body: any): Observable<T> {\n    return ajax\n      .delete(RequestService.getFullUrl(path), RequestService.getHeaders())\n      .pipe(map(response => response.response));\n  }\n\n  static post<T>(path: string, body: any): Observable<T> {\n    return ajax\n      .post(RequestService.getFullUrl(path), body, RequestService.getHeaders())\n      .pipe(map(response => response.response));\n  }\n\n  static put<T>(path: string, body: any): Observable<T> {\n    return ajax\n      .put(RequestService.getFullUrl(path), body, RequestService.getHeaders())\n      .pipe(map(response => response.response));\n  }\n\n  private static getHeaders() {\n    return { Authorization: `Bearer ${RequestService.bearerToken}` };\n  }\n\n  private static getFullUrl(path: string) {\n    return API_SERVER_URL + path;\n  }\n}\n","import {\n  UserProfileApi,\n  UpdateUserProfileDto,\n  UserSettingsApi,\n  UpdateUserSettingsDto,\n} from '@selfplat/api-model';\nimport { RequestService } from '../../services/request.service';\nimport { Observable } from 'rxjs';\n\nexport class UserService {\n  static getProfile(): Observable<UserProfileApi> {\n    return RequestService.get<UserProfileApi>('user-profile');\n  }\n\n  static getSettings(): Observable<UserSettingsApi> {\n    return RequestService.get<UserSettingsApi>('user-settings');\n  }\n\n  static updateProfile(dto: UpdateUserProfileDto): Observable<UserProfileApi> {\n    return RequestService.put<UserProfileApi>('user-profile', dto);\n  }\n\n  static updateProfilePicture(formData: FormData): Observable<UserProfileApi> {\n    return RequestService.post<UserProfileApi>('user-profile/image', formData);\n  }\n\n  static updateSettings(\n    dto: UpdateUserSettingsDto,\n  ): Observable<UserSettingsApi> {\n    return RequestService.put<UserSettingsApi>('user-settings', dto);\n  }\n}\n","import React, { useState } from 'react';\n\nimport { Button, Flex, Modal, ModalContent, ModalOverlay } from '@chakra-ui/core';\nimport { ModalBody } from '@chakra-ui/core/dist';\nimport AvatarEdit from 'react-avatar-edit';\n\nexport interface ImageCropModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  pictureUrl: string;\n  onSaveImage: (imageBlob: string) => void;\n}\n\nexport const ImageCropModal = ({ isOpen, onClose, pictureUrl, onSaveImage }: ImageCropModalProps) => {\n  const [imageBlob, setImageBlob] = useState();\n\n  const onCloseImage = () => {\n    setImageBlob(null);\n  };\n\n  const onCropImage = (imageBlob: string) => {\n    setImageBlob(imageBlob);\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\n      <ModalOverlay />\n      <ModalContent width=\"400px\">\n        <ModalBody m={0} p={0}>\n          <AvatarEdit\n            onCrop={onCropImage}\n            onClose={onCloseImage}\n            src={pictureUrl}\n            height={400}\n            width={400}\n            imageWidth={400}\n          />\n          <Flex p={3}>\n            <Button onClick={onClose} width=\"100%\" fontSize=\"sm\" color=\"alert-500\" variant=\"outline\" mr={3}>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                onClose();\n                onSaveImage(imageBlob);\n              }}\n              width=\"100%\"\n              fontSize=\"sm\"\n              color=\"primary-500\"\n              variant=\"outline\"\n              isDisabled={!imageBlob}\n            >\n              Save\n            </Button>\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport {\n  Flex,\n  Heading,\n  FormLabel,\n  FormErrorMessage,\n  Avatar,\n  PseudoBox,\n  Button,\n  useDisclosure,\n  Box,\n} from '@chakra-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserSelector } from '../../shared/store/user/user.selector';\nimport { setProfile } from '../../shared/store/user/user.slice';\nimport { Formik } from 'formik';\nimport { FormControl } from '@chakra-ui/core';\nimport { Input } from '../../shared/components/Input';\nimport { UserProfileApi } from '@selfplat/api-model/';\nimport { FormikErrors, FormikHelpers } from 'formik/dist/types';\nimport { UserService } from '../../shared/store/user/user.service';\nimport { ImageCropModal } from './ImageCropModal/ImageCropModal';\n\nexport interface ProfilePageProps extends RouteComponentProps {}\n\nexport const ProfilePage = (props: ProfilePageProps) => {\n  const dispatch = useDispatch();\n  const profile = useSelector(UserSelector.profile);\n  const {\n    isOpen: isModalOpen,\n    onOpen: onOpenModal,\n    onClose: onCloseModal,\n  } = useDisclosure();\n\n  const validateForm = (\n    values: UserProfileApi,\n  ): FormikErrors<UserProfileApi> => {\n    const errors: FormikErrors<UserProfileApi> = {};\n    const { firstName, lastName } = values;\n\n    if (!firstName) {\n      errors.firstName = 'First name is required';\n    }\n\n    if (!lastName) {\n      errors.lastName = 'Last name is required';\n    }\n\n    return errors;\n  };\n\n  const submitForm = async (\n    values: UserProfileApi,\n    actions: FormikHelpers<UserProfileApi>,\n  ) => {\n    UserService.updateProfile({\n      firstName: values.firstName,\n      lastName: values.lastName,\n    }).subscribe(updatedProfile => {\n      dispatch(setProfile(updatedProfile));\n      actions.setSubmitting(false);\n    });\n  };\n\n  const onSaveProfilePicture = (imageBlob: string) => {\n    if (!imageBlob) {\n      return;\n    }\n\n    const fileName = `${profile.fullName}-avatar`;\n    const imageFile = new File([imageBlob], fileName);\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    UserService.updateProfilePicture(formData).subscribe(updatedProfile => {\n      dispatch(setProfile(updatedProfile));\n    });\n  };\n\n  return (\n    <Flex direction=\"column\">\n      <Heading as=\"h1\" fontWeight=\"normal\" letterSpacing={0.5} size=\"md\" mb={5}>\n        My Profile\n      </Heading>\n\n      <Flex direction=\"column\">\n        <Flex direction=\"column\" p={16} bg=\"white\" shadow=\"sm\">\n          <PseudoBox\n            alignSelf=\"center\"\n            cursor=\"pointer\"\n            mb={10}\n            p=\"2\"\n            borderRadius=\"50%\"\n            transition=\"all 1s\"\n            onClick={onOpenModal}\n            _hover={{ bg: 'primary-50' }}\n          >\n            <Avatar\n              width={56}\n              height={56}\n              name={profile.fullName}\n              src={profile.pictureUrl}\n            />\n          </PseudoBox>\n\n          <Box alignSelf=\"center\" width=\"lg\">\n            <Formik\n              initialValues={profile}\n              onSubmit={submitForm}\n              validate={validateForm}\n            >\n              {({\n                handleSubmit,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                values,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <FormControl isInvalid={Boolean(errors.firstName)}>\n                    <FormLabel htmlFor=\"firstName\">First name</FormLabel>\n                    <Input\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.firstName}\n                      id=\"firstName\"\n                    />\n                    <FormErrorMessage>{errors.firstName}</FormErrorMessage>\n                  </FormControl>\n                  <FormControl mt={10} isInvalid={Boolean(errors.lastName)}>\n                    <FormLabel htmlFor=\"lastName\">Last name</FormLabel>\n                    <Input\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.lastName}\n                      id=\"lastName\"\n                    />\n                    <FormErrorMessage>{errors.lastName}</FormErrorMessage>\n                  </FormControl>\n\n                  <FormControl mt={10} isDisabled>\n                    <FormLabel htmlFor=\"email\">Email</FormLabel>\n                    <Input\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.email}\n                      id=\"email\"\n                    />\n                    <FormErrorMessage>{errors.email}</FormErrorMessage>\n                  </FormControl>\n\n                  <Flex mt={10} justifyContent=\"center\">\n                    <Button\n                      alignSelf=\"flex-start\"\n                      type=\"submit\"\n                      fontSize=\"sm\"\n                      color=\"primary-500\"\n                      variant=\"outline\"\n                      isLoading={isSubmitting}\n                    >\n                      Save\n                    </Button>\n                  </Flex>\n                </form>\n              )}\n            </Formik>\n          </Box>\n        </Flex>\n      </Flex>\n\n      <ImageCropModal\n        isOpen={isModalOpen}\n        onClose={onCloseModal}\n        pictureUrl={profile.pictureUrl}\n        onSaveImage={onSaveProfilePicture}\n      />\n    </Flex>\n  );\n};\n","import * as _ from 'lodash';\n\nexport const themeColors = {\n  green: {\n    'primary-50': '#E8F5E9',\n    'primary-100': '#C8E6C9',\n    'primary-200': '#A5D6A7',\n    'primary-300': '#81C784',\n    'primary-400': '#66BB6A',\n    'primary-500': '#4CAF50',\n    'primary-600': '#43A047',\n    'primary-700': '#388E3C',\n    'primary-800': '#2E7D32',\n    'primary-900': '#1B5E20',\n    'primary-A100': '#B9F6CA',\n    'primary-A200': '#69F0AE',\n    'primary-A400': '#00E676',\n    'primary-A700': '#00C853',\n  },\n  lightBlue: {\n    'primary-50': '#E1F5FE',\n    'primary-100': '#B3E5FC',\n    'primary-200': '#81D4FA',\n    'primary-300': '#4FC3F7',\n    'primary-400': '#29B6F6',\n    'primary-500': '#03A9F4',\n    'primary-600': '#039BE5',\n    'primary-700': '#0288D1',\n    'primary-800': '#0277BD',\n    'primary-900': '#01579B',\n    'primary-A100': '#80D8FF',\n    'primary-A200': '#40C4FF',\n    'primary-A400': '#00B0FF',\n    'primary-A700': '#0091EA',\n  },\n  deepPurple: {\n    'primary-50': '#EDE7F6',\n    'primary-100': '#D1C4E9',\n    'primary-200': '#B39DDB',\n    'primary-300': '#9575CD',\n    'primary-400': '#7E57C2',\n    'primary-500': '#673AB7',\n    'primary-600': '#5E35B1',\n    'primary-700': '#512DA8',\n    'primary-800': '#4527A0',\n    'primary-900': '#311B92',\n    'primary-A100': '#B388FF',\n    'primary-A200': '#7C4DFF',\n    'primary-A400': '#651FFF',\n    'primary-A700': '#6200EA',\n  },\n  pink: {\n    'primary-50': '#FCE4EC',\n    'primary-100': '#F8BBD0',\n    'primary-200': '#F48FB1',\n    'primary-300': '#F06292',\n    'primary-400': '#EC407A',\n    'primary-500': '#E91E63',\n    'primary-600': '#D81B60',\n    'primary-700': '#C2185B',\n    'primary-800': '#AD1457',\n    'primary-900': '#880E4F',\n    'primary-A100': '#FF80AB',\n    'primary-A200': '#FF4081',\n    'primary-A400': '#F50057',\n    'primary-A700': '#C51162',\n  },\n  indigo: {\n    'primary-50': '#E8EAF6',\n    'primary-100': '#C5CAE9',\n    'primary-200': '#9FA8DA',\n    'primary-300': '#7986CB',\n    'primary-400': '#5C6BC0',\n    'primary-500': '#3F51B5',\n    'primary-600': '#3949AB',\n    'primary-700': '#303F9F',\n    'primary-800': '#283593',\n    'primary-900': '#1A237E',\n    'primary-A100': '#8C9EFF',\n    'primary-A200': '#536DFE',\n    'primary-A400': '#3D5AFE',\n    'primary-A700': '#304FFE',\n  },\n  lime: {\n    'primary-0': '#F9FBE7',\n    'primary-100': '#F0F4C3',\n    'primary-200': '#E6EE9C',\n    'primary-300': '#DCE775',\n    'primary-400': '#D4E157',\n    'primary-500': '#CDDC39',\n    'primary-600': '#C0CA33',\n    'primary-700': '#AFB42B',\n    'primary-800': '#9E9D24',\n    'primary-900': '#827717',\n    'primary-A100': '#F4FF81',\n    'primary-A200': '#EEFF41',\n    'primary-A400': '#C6FF00',\n    'primary-A700': '#AEEA00',\n  },\n  deepOrange: {\n    'primary-50': '#FBE9E7',\n    'primary-100': '#FFCCBC',\n    'primary-200': '#FFAB91',\n    'primary-300': '#FF8A65',\n    'primary-400': '#FF7043',\n    'primary-500': '#FF5722',\n    'primary-600': '#F4511E',\n    'primary-700': '#E64A19',\n    'primary-800': '#D84315',\n    'primary-900': '#BF360C',\n    'primary-A100': '#FF9E80',\n    'primary-A200': '#FF6E40',\n    'primary-A400': '#FF3D00',\n    'primary-A700': '#DD2C00',\n  },\n  yellow: {\n    'primary-50': '#FFFDE7',\n    'primary-100': '#FFF9C4',\n    'primary-200': '#FFF59D',\n    'primary-300': '#FFF176',\n    'primary-400': '#FFEE58',\n    'primary-500': '#FFEB3B',\n    'primary-600': '#FDD835',\n    'primary-700': '#FBC02D',\n    'primary-800': '#F9A825',\n    'primary-900': '#F57F17',\n    'primary-A100': '#FFFF8D',\n    'primary-A200': '#FFFF00',\n    'primary-A400': '#FFEA00',\n    'primary-A700': '#FFD600',\n  },\n  teal: {\n    'primary-50': '#E0F2F1',\n    'primary-100': '#B2DFDB',\n    'primary-200': '#80CBC4',\n    'primary-300': '#4DB6AC',\n    'primary-400': '#26A69A',\n    'primary-500': '#009688',\n    'primary-600': '#00897B',\n    'primary-700': '#00796B',\n    'primary-800': '#00695C',\n    'primary-900': '#004D40',\n    'primary-A100': '#A7FFEB',\n    'primary-A200': '#64FFDA',\n    'primary-A400': '#1DE9B6',\n    'primary-A700': '#00BFA5',\n  },\n};\n\nexport const getDemoColors = (): string[] => {\n  return _.keys(themeColors).map((colorKey: string) => {\n    return themeColors[colorKey as ThemeColorKey]['primary-500'];\n  });\n};\n\nexport const getThemeColorKey = (color: string): ThemeColorKey => {\n  const colorKey = _.keys(themeColors).find((colorKey: string) => {\n    return themeColors[colorKey as ThemeColorKey]['primary-500'].toLowerCase() === color.toLowerCase();\n  });\n  return colorKey as ThemeColorKey;\n};\n\nexport const getThemeColors = (colorKey: ThemeColorKey): ThemeColors => {\n  return themeColors[colorKey] as ThemeColors;\n};\n\nexport type ThemeColorKey = keyof typeof themeColors;\nexport type ThemeColors = typeof themeColors.deepOrange;\n","import React, { useState } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n} from '@chakra-ui/core';\nimport { ColorResult, GithubPicker } from 'react-color';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSettings } from '../../shared/store/user/user.slice';\nimport {\n  getDemoColors,\n  getThemeColorKey,\n  getThemeColors,\n  ThemeColorKey,\n} from '../../shared/styles/theme-colors';\nimport { UserSelector } from '../../shared/store/user/user.selector';\nimport { UserService } from '../../shared/store/user/user.service';\n\nexport interface SettingsPageProps extends RouteComponentProps {}\n\nexport const SettingsPage = (props: SettingsPageProps) => {\n  const dispatch = useDispatch();\n  const themeColor = useSelector(UserSelector.themeColor);\n  const [selectedColor, setSelectedColor] = useState(\n    getThemeColors(themeColor as ThemeColorKey)['primary-500'],\n  );\n\n  const onColorChange = (colorResult: ColorResult) => {\n    setSelectedColor(colorResult.hex);\n  };\n\n  const onUpdateSettings = () => {\n    const themeColor = getThemeColorKey(selectedColor);\n    dispatch(setSettings({ themeColor }));\n    UserService.updateSettings({ themeColor }).subscribe();\n  };\n\n  return (\n    <Flex direction=\"column\">\n      <Heading as=\"h1\" fontWeight=\"normal\" letterSpacing={0.5} size=\"md\" mb={5}>\n        Settings\n      </Heading>\n\n      <Flex direction=\"column\">\n        <Flex direction=\"column\" p={16} bg=\"white\" shadow=\"sm\">\n          <Box alignSelf=\"center\">\n            <FormControl>\n              <FormLabel htmlFor=\"firstName\" mb={1}>\n                Theme color:\n              </FormLabel>\n              <GithubPicker\n                color={selectedColor}\n                triangle=\"hide\"\n                onChange={onColorChange}\n                colors={getDemoColors()}\n              />\n            </FormControl>\n\n            <Flex mt={10} justifyContent=\"center\">\n              <Button\n                onClick={onUpdateSettings}\n                alignSelf=\"flex-start\"\n                fontSize=\"sm\"\n                color=\"primary-500\"\n                variant=\"outline\"\n              >\n                Save\n              </Button>\n            </Flex>\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { Box, Flex, Text } from '@chakra-ui/core';\n\nexport interface DailyActionsPageProps extends RouteComponentProps {}\n\nexport const DailyActionsPage = (props: DailyActionsPageProps) => {\n  return (\n    <>\n      <Text mb={3} fontSize=\"xl\" letterSpacing={0.5}>\n        Daily Actions Page\n      </Text>\n      <Flex>\n        <Box shadow=\"md\" flexGrow={1} p={3}>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet asperiores, eligendi esse excepturi fugiat\n          fugit magni modi obcaecati quis quo. Aut dolor ea in libero optio quidem repellat repudiandae similique.\n        </Box>\n      </Flex>\n    </>\n  );\n};\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { selfReducer } from './self/self.slice';\nimport { auth0Reducer } from './auth0/auth0.slice';\nimport { userReducer } from './user/user.slice';\nimport { dashboardUiReducer } from './dashboard-ui/dashboard-ui.slice';\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  self: selfReducer,\n  auth0: auth0Reducer,\n  user: userReducer,\n  dashboardUi: dashboardUiReducer,\n});\n","export class LocalStorageUtil {\n  private static readonly prefix = 'selfplat-';\n\n  static set(key: string, value: any) {\n    try {\n      localStorage.setItem(LocalStorageUtil.getKeyWithPrefix(key), JSON.stringify(value));\n    } catch (e) {\n      console.error('LocalStorageUtil.set', e);\n    }\n  }\n\n  static get<T = any>(key: string): T {\n    try {\n      const json = localStorage.getItem(LocalStorageUtil.getKeyWithPrefix(key));\n      return JSON.parse(json);\n    } catch (e) {\n      console.error('LocalStorageUtil.get', e);\n    }\n  }\n\n  private static getKeyWithPrefix(key: string) {\n    return `${LocalStorageUtil.prefix}-${key}`;\n  }\n}\n","import {\n  CreateResultGoalDto,\n  CreateSelfApi,\n  CreateSelfDto,\n  DreamApi,\n  GetSelfApi,\n  ProgressGoalApi,\n  ResultGoalApi,\n  UpdateDreamDto,\n  UpdateProgressGoalDto,\n  UpdateResultGoalDto,\n} from '@selfplat/api-model';\nimport { RequestService } from '../../services/request.service';\nimport { Observable } from 'rxjs';\n\nexport class SelfService {\n  static getSelf(): Observable<GetSelfApi> {\n    return RequestService.get<GetSelfApi>('self');\n  }\n\n  static createSelf(dto: CreateSelfDto): Observable<CreateSelfApi> {\n    return RequestService.post<CreateSelfApi>('self', dto);\n  }\n\n  static updateDream(id: string, dto: UpdateDreamDto): Observable<DreamApi> {\n    return RequestService.post<DreamApi>(`dream/${id}`, dto);\n  }\n\n  static createResultGoal(dto: CreateResultGoalDto): Observable<ResultGoalApi> {\n    return RequestService.post<ResultGoalApi>('result-goal', dto);\n  }\n\n  static updateResultGoal(id: string, dto: UpdateResultGoalDto): Observable<ResultGoalApi> {\n    return RequestService.put<DreamApi>(`result-goal/${id}`, dto);\n  }\n\n  static createProgressGoal(dto: CreateResultGoalDto): Observable<ProgressGoalApi> {\n    return RequestService.post<ProgressGoalApi>('progress-goal', dto);\n  }\n\n  static updateProgressGoal(id: string, dto: UpdateProgressGoalDto): Observable<ProgressGoalApi> {\n    return RequestService.put<ProgressGoalApi>(`progress-goal/${id}`, dto);\n  }\n}\n","import { timer } from 'rxjs';\n\nexport const loadingDelay$ = timer(20);\n","import { AppEpic } from '../root.epic';\nimport { debounceTime, distinctUntilChanged, filter, mapTo, switchMap, switchMapTo } from 'rxjs/operators';\nimport {\n  updateDreamTitleEpic,\n  fetchSelfEpic,\n  setSelf,\n  setResultGoal,\n  setProgressGoals,\n  setDream,\n  createSelfEpic,\n  createResultGoalEpic,\n  updateResultGoalTitleEpic,\n  createProgressGoalEpic,\n  addProgressGoal,\n  updateProgressGoalTitleEpic,\n} from './self.slice';\nimport { concat, of } from 'rxjs';\nimport { SelfService } from './self.service';\nimport * as _ from 'lodash';\nimport { loadingDelay$ } from '../../observables/constants';\nimport { setIsLoading, setIsSaving } from '../dashboard-ui/dashboard-ui.slice';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { UpdateDreamTitlePayload, UpdateProgressGoalTitlePayload, UpdateResultGoalTitlePayload } from './self.type';\n\nconst fetchSelf$: AppEpic = action$ =>\n  action$.pipe(\n    filter(fetchSelfEpic.match),\n    switchMap(() =>\n      concat(\n        of(setIsLoading(true)),\n        SelfService.getSelf().pipe(\n          switchMap(({ self, dream, resultGoal, progressGoals }) =>\n            loadingDelay$.pipe(\n              switchMapTo(\n                concat(\n                  of(setSelf(self)),\n                  of(setDream(dream)),\n                  of(setResultGoal(resultGoal)),\n                  of(setProgressGoals(progressGoals)),\n                ),\n              ),\n            ),\n          ),\n        ),\n        of(setIsLoading(false)),\n      ),\n    ),\n  );\n\nconst createSelf$: AppEpic = action$ =>\n  action$.pipe(\n    filter(createSelfEpic.match),\n    switchMap(action =>\n      concat(\n        of(setIsLoading(true)),\n        SelfService.createSelf({ title: action.payload.title }).pipe(\n          switchMap(({ self, dream }) =>\n            loadingDelay$.pipe(switchMapTo(concat(of(setSelf(self)), of(setDream(dream))))),\n          ),\n        ),\n        of(setIsLoading(false)),\n      ),\n    ),\n  );\n\nconst updateDreamTitle$: AppEpic = action$ =>\n  action$.pipe(\n    filter(updateDreamTitleEpic.match),\n    debounceTime(500),\n    distinctUntilChanged(_.isEqual),\n    switchMap((action: PayloadAction<UpdateDreamTitlePayload>) =>\n      concat(\n        of(setIsSaving(true)),\n        SelfService.updateDream(action.payload.id, {\n          title: action.payload.title,\n        }).pipe(switchMapTo(loadingDelay$), mapTo(setIsSaving(false))),\n      ),\n    ),\n  );\n\nconst createResultGoal$: AppEpic = action$ =>\n  action$.pipe(\n    filter(createResultGoalEpic.match),\n    switchMap(action =>\n      concat(\n        of(setIsLoading(true)),\n        SelfService.createResultGoal({\n          dreamId: action.payload.dreamId,\n          title: action.payload.title,\n        }).pipe(switchMap(resultGoal => loadingDelay$.pipe(mapTo(setResultGoal(resultGoal))))),\n        of(setIsLoading(false)),\n      ),\n    ),\n  );\n\nconst updateResultGoalTitle$: AppEpic = action$ =>\n  action$.pipe(\n    filter(updateResultGoalTitleEpic.match),\n    debounceTime(500),\n    distinctUntilChanged(_.isEqual),\n    switchMap((action: PayloadAction<UpdateResultGoalTitlePayload>) =>\n      concat(\n        of(setIsSaving(true)),\n        SelfService.updateResultGoal(action.payload.id, {\n          title: action.payload.title,\n        }).pipe(switchMapTo(loadingDelay$), mapTo(setIsSaving(false))),\n      ),\n    ),\n  );\n\nconst createProgressGoal$: AppEpic = action$ =>\n  action$.pipe(\n    filter(createProgressGoalEpic.match),\n    switchMap(action =>\n      concat(\n        of(setIsLoading(true)),\n        SelfService.createProgressGoal(action.payload).pipe(\n          switchMap(progressGoal => loadingDelay$.pipe(mapTo(addProgressGoal(progressGoal)))),\n        ),\n        of(setIsLoading(false)),\n      ),\n    ),\n  );\n\nconst updateProgressGoalTitle$: AppEpic = action$ =>\n  action$.pipe(\n    filter(updateProgressGoalTitleEpic.match),\n    debounceTime(500),\n    distinctUntilChanged(_.isEqual),\n    switchMap((action: PayloadAction<UpdateProgressGoalTitlePayload>) =>\n      concat(\n        of(setIsSaving(true)),\n        SelfService.updateProgressGoal(action.payload.id, { title: action.payload.title }).pipe(\n          switchMapTo(loadingDelay$),\n          mapTo(setIsSaving(false)),\n        ),\n      ),\n    ),\n  );\n\nexport const selfEpic = [\n  fetchSelf$,\n  updateDreamTitle$,\n  createSelf$,\n  createResultGoal$,\n  updateResultGoalTitle$,\n  createProgressGoal$,\n  updateProgressGoalTitle$,\n];\n","import { AppEpic } from '../root.epic';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { UserService } from './user.service';\nimport { navigate } from '@reach/router';\nimport { setProfile, setSettings, fetchUserInfoEpic } from './user.slice';\nimport { concat } from 'rxjs';\n\nconst fetchUsers$: AppEpic = action$ =>\n  action$.pipe(\n    filter(fetchUserInfoEpic.match),\n    switchMap(() =>\n      concat(\n        UserService.getProfile().pipe(map(profile => setProfile(profile))),\n        UserService.getSettings().pipe(map(settings => setSettings(settings))),\n      ),\n    ),\n    // Is it a good way to do this\n    tap(() => navigate('/dashboard')),\n  );\n\nexport const userEpic = [fetchUsers$];\n","import { combineEpics, createEpicMiddleware, Epic } from 'redux-observable';\nimport { AnyAction } from '@reduxjs/toolkit';\nimport { RootState } from './root.reducer';\nimport { selfEpic } from './self/self.epic';\nimport { userEpic } from './user/user.epic';\n\nexport type AppEpic = Epic<AnyAction, AnyAction, RootState>;\nexport const epicMiddleware = createEpicMiddleware<\n  AnyAction,\n  AnyAction,\n  RootState\n>();\nexport const rootEpic: AppEpic = combineEpics(...selfEpic, ...userEpic);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { rootReducer, RootState } from './root.reducer';\nimport { LocalStorageUtil } from '../utils/local-storage.util';\nimport { epicMiddleware, rootEpic } from './root.epic';\n\nexport const storeKey = 'store';\n\nexport const rootStore = configureStore({\n  reducer: rootReducer,\n  enhancers: [],\n  middleware: [\n    ...getDefaultMiddleware({\n      thunk: false,\n    }),\n    epicMiddleware,\n  ],\n  preloadedState: LocalStorageUtil.get<RootState>(storeKey) || undefined,\n});\n\nepicMiddleware.run(rootEpic);\n\nexport type Store = typeof rootStore;\nexport type AppDispatch = typeof rootStore.dispatch;\n","import * as _ from 'lodash';\nimport { RootState } from '../store/root.reducer';\nimport { auth0Name } from '../store/auth0/auth0.slice';\nimport { userName } from '../store/user/user.slice';\nimport { dashboardUiName } from '../store/dashboard-ui/dashboard-ui.slice';\nimport { LocalStorageUtil } from '../utils/local-storage.util';\nimport { Store } from '../store/root.store';\n\nexport class StoreService {\n  static init(store: Store, storeKey: string) {\n    store.subscribe(() => {\n      StoreService.saveStateToLocalStorage(store.getState(), storeKey);\n      return () => {};\n    });\n  }\n\n  private static saveStateToLocalStorage = _.debounce(\n    (state: RootState, storeKey: string) => {\n      const slicesNamesToSave = [auth0Name, userName, dashboardUiName];\n      const stateToSave = slicesNamesToSave.reduce((stateToSave, sliceName) => {\n        stateToSave[sliceName] = state[sliceName];\n        return stateToSave;\n      }, {} as RootState);\n      LocalStorageUtil.set(storeKey, stateToSave);\n    },\n    300,\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport { rootStore, storeKey } from './shared/store/root.store';\nimport whyDidYouRender from '@welldone-software/why-did-you-render';\nimport { StoreService } from './shared/services/store.service';\nimport { RequestService } from './shared/services/request.service';\nconst ReactRedux = import('react-redux');\n\nif (process.env.NODE_ENV === 'test') {\n  whyDidYouRender(React, {\n    trackAllPureComponents: true,\n    trackExtraHooks: [[ReactRedux, 'useSelector']],\n  });\n}\n\nStoreService.init(rootStore, storeKey);\nRequestService.init(rootStore);\nReactDOM.render(\n  <Provider store={rootStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport { theme } from './shared/styles/theme';\nimport { Auth0Provider } from './shared/auth0/Auth0Provider';\nimport { Dashboard } from './Dashboard/Dashboard';\nimport { Redirect, Router } from '@reach/router';\nimport { GoalsPage } from './Dashboard/GoalsPage/GoalsPage';\nimport { PlansPage } from './Dashboard/PlansPage/PlansPage';\nimport { WeeklySummaryPage } from './Dashboard/WeeklySummaryPage/WeeklySummaryPage';\nimport { GratitudePage } from './Dashboard/GratitudePage/GratitudePage';\nimport { Home } from './Home/Home';\nimport { ProfilePage } from './Dashboard/ProfilePage/ProfilePage';\nimport { SettingsPage } from './Dashboard/SettingsPage/SettingsPage';\nimport { UserSelector } from './shared/store/user/user.selector';\nimport { getThemeColors, ThemeColorKey } from './shared/styles/theme-colors';\nimport { DailyActionsPage } from './Dashboard/DailyActionsPage/DailyActionsPage';\n\nexport const App = () => {\n  const { themeColor } = useSelector(UserSelector.settings);\n\n  const appTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      ...getThemeColors(themeColor as ThemeColorKey),\n    },\n  };\n\n  return (\n    <ThemeProvider theme={appTheme}>\n      <Auth0Provider>\n        <CSSReset />\n        <Router primary={false}>\n          <Home path=\"/\" />\n          <Dashboard path=\"/dashboard\">\n            <GoalsPage path=\"goals\" />\n            <PlansPage path=\"plans\" />\n            <DailyActionsPage path=\"daily-actions\" />\n            <WeeklySummaryPage path=\"weekly-summary\" />\n            <GratitudePage path=\"gratitude\" />\n            <ProfilePage path=\"profile\" />\n            <SettingsPage path=\"settings\" />\n            <Redirect from=\"/\" to=\"/dashboard/goals\" default noThrow />\n          </Dashboard>\n          <Redirect from=\"/\" to=\"/dashboard\" default noThrow />\n        </Router>\n      </Auth0Provider>{' '}\n    </ThemeProvider>\n  );\n};\n"],"sourceRoot":""}